---
import LinkButton from "./LinkButton.astro";
import GitHub from "./icons/GitHub.astro";
import Link from "./icons/Link.astro";
import NextJS from "./icons/NextJS.astro";
import Tailwind from "./icons/Tailwind.astro";

const TAGS = {
  NEXT: {
    name: "Next.js",
    class: "bg-black text-white",
    icon: NextJS,
  },
  TAILWIND: {
    name: "Tailwind CSS",
    class: "bg-[#003159] text-white",
    icon: Tailwind,
  },
};
const PROJECTS = [
  {
    title:
      "ML in ARGs - Machine Learning to fight against Antibiotic Resistant Genes",
    description:
      "Using genetic information from resistant bacteria, it is possible to model the characteristics that confer resistance to certain antibiotics. This information could be used to predict new potential resistant genes or sets of genes and take appropriate action. In this project, real data from a series of resistant bacteria identified in the laboratory will be used to build a machine learning model capable of predicting potential resistance genes (ARGS).",
    link: "https://geovalexis.github.io/ml-in-args/",
    github: "https://github.com/geovalexis/ml-in-args",
    image:
      "https://itaintmagic.riken.jp/wp-content/uploads/resisting-bacteria.png",
    tags: [TAGS.NEXT, TAGS.TAILWIND],
  },
  {
    title:
      "Glaucoma Detection - CNN model to detect glaucoma disease using fundus images",
    description:
      "In this project, we developed a convolutional neural network (CNN) based on the Xception architecture to classify fundus images for glaucoma detection, achieving an F1-score of 0.87 ± 0.05. While provided training folds were used, a more flexible cross-validation strategy would be preferable to enhance model evaluation. Key factors in designing partitions include ensuring diversity and balanced class distribution to improve generalization.",
    link: "https://geovalexis.github.io/GlaucomaDetection/",
    github: "https://github.com/geovalexis/PP2GO",
    image:
      "https://glaucoma.org.au/sites/default/files/inline-images/SLT%202400x1268.png",
    tags: [TAGS.NEXT, TAGS.TAILWIND],
  },
  {
    title: "PP2GO - Phylogenetic Profiling To Gene Ontology",
    description:
      "Machine Learning to predict functional relationships of uncharacterized proteins through orthology and co-evolution information. A pipeline was developed to test different models and filters in a High-Performance Computing environment",
    link: "https://github.com/geovalexis/PP2GO",
    github: "https://github.com/geovalexis/PP2GO",
    image: "https://d20khd7ddkh5ls.cloudfront.net/coevolution_bees_flowers.png",
    tags: [TAGS.NEXT, TAGS.TAILWIND],
  },
];
---

<!-- <div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, link, github }) => (
    <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
  <div class="w-full md:w-1/2">
    <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
      <img alt="Recién llegado vs 5 años en Nueva Zelanda" class="object-cover object-top w-full h-56 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105" loading="lazy" src={image} />
    </div>
  </div>

  <div class="w-full md:w-1/2 md:max-w-lg">
    <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
      {title}
    </h3>
    <div class="flex flex-wrap mt-2">
      <ul class="flex flex-row mb-2 gap-x-2">
          {tags.map((tag) => (
            <li>
              <span
                class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            </li>
          ))}
        </ul>

      <div class="mt-2 text-gray-700 dark:text-gray-400">{description}</div>
      <footer class="flex items-end justify-start mt-4 gap-x-4">
          {github && (
            <LinkButton href={github}>
              <GitHub class="size-6" />
              Code
              
            </LinkButton>
          )}
          {link && (
            <LinkButton href={link}>
              <Link class="size-4" />
              Preview
            </LinkButton>
          )}
        </footer>
    </div>
  </div>
</article>
    ))
  }
</div> -->
<div class="projects-carousel">
  <input type="radio" name="slider" id="item-1" />
  <input type="radio" name="slider" id="item-2" />
  <input type="radio" name="slider" id="item-3" />
  <div class="cards">
    <label class="card" for="item-1" id="song-1">
      <img
        src="https://images.unsplash.com/photo-1530651788726-1dbf58eeef1f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=882&q=80"
        alt="song"
      />
    </label>
    <label class="card" for="item-2" id="song-2">
      <img
        src="https://images.unsplash.com/photo-1559386484-97dfc0e15539?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1234&q=80"
        alt="song"
      />
    </label>
    <label class="card" for="item-3" id="song-3">
      <img
        src="https://images.unsplash.com/photo-1533461502717-83546f485d24?ixlib=rb-1.2.1&auto=format&fit=crop&w=900&q=60"
        alt="song"
      />
    </label>
  </div>
</div>

<style>
  .projects-carousel {
    width: 100%;
    height: 800px; /* Set a specific height */
    max-width: 800px;
    max-height: 600px;
  }

  .cards {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 80%; /* Ensure parent has a defined height */
    position: relative;
    margin-bottom: 20px;
  }

  .card {
    position: absolute;
    width: 85%;
    /* max-height: 600px; */ /* TODO: Find out why this property is messing up the layout */
    height: 70%;
    left: 0;
    right: 0;
    margin: auto;
    transition: transform 0.4s ease;
    cursor: pointer;
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 10px;
  }
</style>

<script>
  // Render 3D Carousel
  const cardTransformations = {
    central: {
      cardStyles: {
        transform: "translateX(0) scale(1)",
        opacity: "1",
        "z-index": "1",
      },
      imgStyles: {
        boxShadow: "0px 0px 5px 0px rgba(81, 81, 81, 0.47)",
      },
    },
    left: {
      cardStyles: {
        transform: "translateX(-40%) scale(0.8)",
        opacity: "0.4",
        "z-index": "0",
      },
      imgStyles: {
        boxShadow: "none",
      },
    },
    right: {
      cardStyles: {
        transform: "translateX(40%) scale(0.8)",
        opacity: "0.4",
        "z-index": "0",
      },
      imgStyles: {
        boxShadow: "none",
      },
    },
  };
  function changeCardStyles(
    cardId: string,
    styles: Record<string, Record<string, string>>
  ) {
    const card = document.querySelector<HTMLElement>(`#${cardId}`)!;
    for (const [key, value] of Object.entries(styles.cardStyles)) {
      card.style.setProperty(key, value);
    }
    const cardImg = card.querySelector<HTMLElement>("img")!;
    for (const [key, value] of Object.entries(styles.imgStyles)) {
      cardImg.style.setProperty(key, value);
    }
  }
  const inputs = document.querySelectorAll<HTMLInputElement>(
    'input[name="slider"]'
  );
  inputs.forEach((input, index) => {
    input.addEventListener("change", () => {
      changeCardStyles(`song-${index + 1}`, cardTransformations.central);
      changeCardStyles(
        `song-${((index - 1 + inputs.length) % inputs.length) + 1}`,
        cardTransformations.left
      );
      changeCardStyles(
        `song-${((index + 1) % inputs.length) + 1}`,
        cardTransformations.right
      );
    });
  });

  // Trigger change event on first input to render the initial state
  inputs[0].dispatchEvent(new Event("change"));
</script>
